# -*- coding: utf-8 -*-
"""Data_For_Preprocessing.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1eRnL06Qv3ZFl1wIwjYGbSGIf7ZGFl622
"""

import numpy as np
import pandas as pd

dataset= pd.read_csv("data_for_preprocessing.csv")

dataset.isnull().sum()

dataset.dropna(axis=0)

dataset.dropna(thresh=3, axis=0)

dataset

dataset.dropna(thresh=3, axis=0, inplace=True)

dataset.dropna(thresh=9,axis=1,inplace=True)

from sklearn.impute import SimpleImputer

imputer = SimpleImputer(missing_values=np.nan,strategy='mean')

X=dataset[['Branch','CGPA','Salary']]

X

X=dataset[['Branch','CGPA','Salary']].values

X[:,:]

X[:,1:3]

imputer = imputer.fit(X[:,1:3])
X

X[:,1:3]=imputer.transform(X[:,1:3])
X

y=dataset['Placed'].tolist()
print(type(y))
print(y)

from sklearn.preprocessing import LabelEncoder
label_encode=LabelEncoder()
le = LabelEncoder()
y=le.fit_transform(y)

print(y)

y=dataset['Placed']
y.mode()

y=y.fillna(y.mode().iloc[0])

print(y)
from sklearn.preprocessing import LabelEncoder
label_encode=LabelEncoder()
le = LabelEncoder()
y=le.fit_transform(y)

print(y)

from sklearn.preprocessing import OneHotEncoder

onehotencoder = OneHotEncoder()

type(X[0])

from sklearn.compose import ColumnTransformer
from sklearn.preprocessing import OneHotEncoder

ct = ColumnTransformer(transformers=[('encoder', OneHotEncoder(), [0])], remainder='passthrough')

X = np.array(ct.fit_transform(X))

X